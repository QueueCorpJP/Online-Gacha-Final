【backend/src/modules/gacha/gacha.controller.ts】
- ガチャ機能の管理用コントローラー。
- 画像アップロード時のファイル名生成処理と拡張子の小文字統一、fileFilterの正規表現修正。

【backend/src/modules/news-blog/news-blog.controller.ts】
- ニュース・ブログ機能の管理用コントローラー。
- 画像アップロード時のファイル名生成処理と拡張子の小文字統一、fileFilterの正規表現修正。

【今回の修正内容】
- 画像アップロード時、拡張子を小文字に統一するよう修正。
- fileFilterの正規表現にiフラグを追加し、大文字小文字を区別せずjpg/jpeg/pngを許可。
- これによりpngファイルが0バイトで保存される問題の解消を狙う。

【frontend/app/forgot-password/sent/page.tsx】
- パスワードリセットリンク送信完了ページ。
- フォーム送信後に自動遷移し、ユーザーに「送信しました！」を案内。
- /login へのリンクあり。

【frontend/app/reset-password/sent/page.tsx】
- パスワード再設定完了ページ。
- パスワードリセット完了後に自動遷移し、ユーザーに「パスワードがリセットされました！」を案内。
- /login へのリンクあり。

【backend/src/modules/user/entities/user.entity.ts】
- ユーザー情報を管理するエンティティ。
- プロフィール情報、認証情報、コイン残高などを保持。
- Prize エンティティとのリレーション設定を修正（@OneToMany デコレータを追加し、逆参照を削除）。

【backend/src/modules/prizes/prize.entity.ts】
- 景品情報を管理するエンティティ。
- ユーザーが獲得した景品の名前、画像、配送状況などを保持。
- User エンティティとの ManyToOne リレーション設定を修正。

【backend/src/app.module.ts】
- アプリケーションのルートモジュール。
- 各機能モジュールのインポートと設定を行う。
- PrizeModule を追加して Prize エンティティを正しく読み込めるようにした。

【backend/src/modules/prizes/prize.service.ts】
- 景品関連の処理を行うサービス。
- ユーザーIDに基づく景品の取得、ステータス更新、コインへの変換などの機能を提供。
- クエリ形式を修正して正しくユーザーの景品を取得できるようにした。

【backend/src/modules/prizes/prize.module.ts】
- 景品機能のモジュール定義。
- AuthModuleをインポートして、AuthGuardとJwtServiceを利用可能にする。
- 直接JwtModuleをインポートする代わりにAuthModuleを使用することで、既存の認証設定を再利用。
- これにより「Nest can't resolve dependencies of the AuthGuard」エラーを解決。 